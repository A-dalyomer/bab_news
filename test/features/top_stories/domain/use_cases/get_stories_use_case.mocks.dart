// Mocks generated by Mockito 5.4.4 from annotations
// in bab_news/test/features/top_stories/domain/use_cases/get_stories_use_case.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bab_news/core/utils/enums.dart' as _i4;
import 'package:bab_news/features/top_stories/domain/entities/story_entity.dart'
    as _i6;
import 'package:bab_news/features/top_stories/domain/repositories/stories_repository.dart'
    as _i2;
import 'package:bab_news/features/top_stories/domain/use_cases/get_stories_use_case.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStoriesRepository_0 extends _i1.SmartFake
    implements _i2.StoriesRepository {
  _FakeStoriesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetStoriesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStoriesUseCase extends _i1.Mock implements _i3.GetStoriesUseCase {
  @override
  _i2.StoriesRepository get storiesRepository => (super.noSuchMethod(
        Invocation.getter(#storiesRepository),
        returnValue: _FakeStoriesRepository_0(
          this,
          Invocation.getter(#storiesRepository),
        ),
        returnValueForMissingStub: _FakeStoriesRepository_0(
          this,
          Invocation.getter(#storiesRepository),
        ),
      ) as _i2.StoriesRepository);

  @override
  _i4.StorySection get section => (super.noSuchMethod(
        Invocation.getter(#section),
        returnValue: _i4.StorySection.arts,
        returnValueForMissingStub: _i4.StorySection.arts,
      ) as _i4.StorySection);

  @override
  set section(_i4.StorySection? _section) => super.noSuchMethod(
        Invocation.setter(
          #section,
          _section,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setStorySection(_i4.StorySection? section) => super.noSuchMethod(
        Invocation.method(
          #setStorySection,
          [section],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<List<_i6.StoryEntity>?> call(_i2.StoriesRepository? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<List<_i6.StoryEntity>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i6.StoryEntity>?>.value(),
      ) as _i5.Future<List<_i6.StoryEntity>?>);
}
